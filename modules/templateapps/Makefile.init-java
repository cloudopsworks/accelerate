JAVA_TEMPLATES = \
	.github/labeler.yml \
	.github/workflows/automerge.yml \
	.github/workflows/build-pull-request.yml \
	.github/workflows/code-build.yml \
	.github/workflows/code-tag.yml \
	.github/workflows/main-build.yml \
	.github/workflows/on-pull-request.yml \
	.github/workflows/slash-commands.yml \
	.github/workflows/slash-on-approve.yml \
	.github/workflows/slash-on-promote.yml \
	.github/workflows/static-analysis.yml \
	.dockerignore \
	.helmignore

$(JAVA_TEMPLATES): $(addprefix $(TRONADOR_PATH)/templates/apps/java-app/, $(JAVA_TEMPLATES))
	mkdir -p $(dir $@)
	cp $(TRONADOR_PATH)/templates/apps/java-app/$@ $@
	git add $@

Dockerfile: # Do not overwrite by default
	cp $(TRONADOR_PATH)/templates/apps/java-app/$@ $@
	git add $@

cloudopsworks-ci.yaml: # Do not overwrite by default
	cp $(TRONADOR_PATH)/templates/apps/java-app/$@ $@
	git add $@

template/apps/quickstart:
	rm -fr $(TRONADOR_PATH)/vendor/spring-boot-maven
	git clone $(QUICKSTART_REPO)/spring-boot-maven $(TRONADOR_PATH)/vendor/spring-boot-maven
	rm -fr $(TRONADOR_PATH)/vendor/spring-boot-maven/.git
	cp -pR $(TRONADOR_PATH)/vendor/spring-boot-maven/. .

template/apps/pomconfig:
ifeq ($(OS),darwin)
	echo -n "Name of the Maven Group Id? (com.example)" ; \
	read GROUP_ID ; \
	sed -i "" -e "s|<groupId>com\.example</groupId>|<groupId>$$GROUP_ID</groupId>|g" pom.xml
else ifeq ($(OS),linux)
	echo -n "Name of the Maven Group Id? (com.example)" ; \
	read GROUP_ID ; \
	sed -i -e "s|<groupId>com\.example</groupId>|<groupId>$$GROUP_ID</groupId>|g" pom.xml
else
	echo "platfrom $(OS) not supported to release from"
	exit -1
endif

## Template init for JAVA app
template/apps/java: github/init $(JAVA_TEMPLATES) $(BASE_GH_TEMPLATES) Dockerfile cloudopsworks-ci.yaml

## Template init for JAVA app, specifying specific version (e.g. 8, 11, 16)
template/apps/java/%: template/apps/java template/apps/quickstart template/apps/pomconfig
ifeq ($(OS),darwin)
	sed -i "" -e "s/java-version\:.*/java-version: \"$(notdir $@)\"/g" .github/workflows/code-build.yml
	sed -i "" -e "s/java-version\:.*/java-version: \"$(notdir $@)\"/g" .github/workflows/code-tag.yml
	sed -i "" -e "s/java-version\:.*/java-version: \"$(notdir $@)\"/g" .github/workflows/static-analysis.yml
	sed -i "" -e "s/FROM openjdk\:.*/FROM openjdk:$(notdir $@)-jdk/g" Dockerfile
	sed -i "" -e "s|<java.version>./</java.version>|<java.version>$(notdir $@)</java.version>|g" pom.xml
else ifeq ($(OS),linux)
	sed -i -e "s/java-version\:.*/java-version: \"$(notdir $@)\"/g" .github/workflows/code-build.yml
	sed -i -e "s/java-version\:.*/java-version: \"$(notdir $@)\"/g" .github/workflows/code-tag.yml
	sed -i -e "s/java-version\:.*/java-version: \"$(notdir $@)\"/g" .github/workflows/static-analysis.yml
	sed -i -e "s/FROM openjdk\:.*/FROM openjdk:$(notdir $@)-jdk/g" Dockerfile
	sed -i -e "s|<java.version>./</java.version>|<java.version>$(notdir $@)</java.version>|g" pom.xml
else
	echo "platfrom $(OS) not supported to release from"
	exit -1
endif

